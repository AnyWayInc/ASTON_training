// 1) Почитать про принципы программирования KISS, DRY, YAGNI + почитать про "Антипаттерны" Чистого кода

//

// 2) Прочитать про способы хранения LocalStorage, SessionStorage и Cookie

//

// 3) HTML / CSS - Базовая структура html документа, БЭМ методология

//

// 4) Почитать про паттерны функционального программирования + посмотреть примеры использования

//

// 5) Способы позиционирования контента на странице

//position: relative, absolute, static, sticky - css свойство которое определяет положение контента на странице 
//relative - позиционирование относительно его стандартного местоположения на странице , при его использовании можно использовать 
//top,left,bottom,right - параметры которые указывают на смещение местоположения элемента относительно его стандартного 
//absolute - позиционирование относительно родительского элемента, который имеет позиционирование отличное от static не взирая на другие элементы страницы
//при использовании можно также задать параметры top,left,bottom,right
//static - позиционирование элемента в соответствии его места в потоке документа(значение по умолчанию)
//sticky - позиционирование которое фиксируется при скролинге странницы в определенном месте
//fixed - позиционирование относительно окна браузера, т.е. на фиксированном месте страницы независимо от скролинга 
//Также существует способ позиционирование элемента при помощи display
//display: inline, block, flex, grid
//inline - расположение блока элементов в линию в зависимости от их ширины этиъ элементов
//block - расположение элемента по всей ширине страницы каждый элемент блока с новой строки 
//flex - гибкое расположение элементов за счет правильного расположение элементов на странице 
//grid - это макет для сайта (его схема, проект)

// 6) Веса селекторов

//1000 - встроенный инлайн стиль
//100 - идентификатор
//10 - псевдоклассы
//10 - класс 
//10 - атрибут
//1 - псевдоэлемент
//1 = тэги html 

//Если к одному и тому же элементу применяются стили с разным весом, в результате CSS отобразит стиль с наибольшим весом.