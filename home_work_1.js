//Подробно прочитать про метод запроса OPTIONS - и кратко его описать, когда вызывается, где используется, что передает и принимает. 
/*
    OPTION - Метод используемый для описания параметров соединения с каким либо ресурсом
    Принимает в себя URL для обработки метода, или * чтобы указать весь сервер целиком
    Передает список поддерживаемых методов для ресурса.
    Вызывается по технологии CORS в качестве предзапроса поэтому сервер отвечает приемлемо ли отправлять запросы этим методом.
    Метод OPTIONS же используется, в основном, механизмом Preflight request в CORS или для обнаружения поддерживаемых сервером фич в WebDAV.
*/

//Прочитать и описать ключевые особенности "HTTP" Версии 3.0

//Используется новый протокол QUIC который работает поверх TLS который уменьшает задержку получения и передачи данных так как в один запрос они упокавали 
//установку соединения и установку шифрования к тому же не нужно будет устанавливать новые соединения так как используется уникальный идентификатор соединения


//Написать по 2 примера создания примитивных значений (если есть несколько способов - использовать) (string, number, boolean, null, undefined, symbol, bigInt)

let str = Object('str')
let str1 = String('str')
let str2 = 'asd'

let num = Object(11);
let num2 =  Number(3);
let num3 = 1
const numESistemOfNumber = 0o23

let bul = Object(false)
let bul1 = Boolean(true)
let bul2 = false

let obj = Object({one:1})
let obj1 = {one:1}

let mas = Object([1,2,3])
let mas1 = Array(1,2,3,4)
let mas2 = [1,2,3]

let nul = Object(null)
let nul1 = (null)
let nul2 = null

let und = Object(undefined)
let und1 = undefined
let und2 = undefined

let bigInt = Object(11231232n)
let bigInt2 = BigInt(1)
let bigInt1 = 123213123n

let smb = Symbol('z')
let smb1 = Object('z')
let smb2 = '';

//Почему, если обратиться к переменным созданным через let, const до их объявления - мы получаем ReferenceError?

//Потому что мы обращаемся к ним до их инициализации в коде, соответственно компилятор не видит переменной в глобальной области видимости и выдает ошибку

//Решить задания 

const res = "B" + "a" + (1 - 'hello');
console.log(res); //'BaNan' так как (1 - "hello") не решается так как 1 - число, а 'hello' строчка что выдаст NotANumber

const res2 = (true && 3) + 'd';
console.log(res2); //'3d' так как в логическом И при выполнении условии берется 2 выражение и к нему добавляется строчка 'd'

const res3 = Boolean(true && 3) + 'd';
console.log(res3); //'trued' так как все что стоит в булеан не равное null undefind и тд приравнивается true и преобразуется в строчку из за + и добавляется символ 'd'